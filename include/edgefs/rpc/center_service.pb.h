// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_service.proto

#ifndef PROTOBUF_center_5fservice_2eproto__INCLUDED
#define PROTOBUF_center_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_center_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPullRequestImpl();
void InitDefaultsPullRequest();
void InitDefaultsPullReplyImpl();
void InitDefaultsPullReply();
inline void InitDefaults() {
  InitDefaultsPullRequest();
  InitDefaultsPullReply();
}
}  // namespace protobuf_center_5fservice_2eproto
namespace edgefs {
class PullReply;
class PullReplyDefaultTypeInternal;
extern PullReplyDefaultTypeInternal _PullReply_default_instance_;
class PullRequest;
class PullRequestDefaultTypeInternal;
extern PullRequestDefaultTypeInternal _PullRequest_default_instance_;
}  // namespace edgefs
namespace edgefs {

// ===================================================================

class PullRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edgefs.PullRequest) */ {
 public:
  PullRequest();
  virtual ~PullRequest();

  PullRequest(const PullRequest& from);

  inline PullRequest& operator=(const PullRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullRequest(PullRequest&& from) noexcept
    : PullRequest() {
    *this = ::std::move(from);
  }

  inline PullRequest& operator=(PullRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullRequest* internal_default_instance() {
    return reinterpret_cast<const PullRequest*>(
               &_PullRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PullRequest* other);
  friend void swap(PullRequest& a, PullRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PullRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PullRequest& from);
  void MergeFrom(const PullRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PullRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // uint64 chunck_size = 2;
  void clear_chunck_size();
  static const int kChunckSizeFieldNumber = 2;
  ::google::protobuf::uint64 chunck_size() const;
  void set_chunck_size(::google::protobuf::uint64 value);

  // uint64 start_chunck_no = 3;
  void clear_start_chunck_no();
  static const int kStartChunckNoFieldNumber = 3;
  ::google::protobuf::uint64 start_chunck_no() const;
  void set_start_chunck_no(::google::protobuf::uint64 value);

  // uint64 chuncks_num = 4;
  void clear_chuncks_num();
  static const int kChuncksNumFieldNumber = 4;
  ::google::protobuf::uint64 chuncks_num() const;
  void set_chuncks_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:edgefs.PullRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint64 chunck_size_;
  ::google::protobuf::uint64 start_chunck_no_;
  ::google::protobuf::uint64 chuncks_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_center_5fservice_2eproto::TableStruct;
  friend void ::protobuf_center_5fservice_2eproto::InitDefaultsPullRequestImpl();
};
// -------------------------------------------------------------------

class PullReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edgefs.PullReply) */ {
 public:
  PullReply();
  virtual ~PullReply();

  PullReply(const PullReply& from);

  inline PullReply& operator=(const PullReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PullReply(PullReply&& from) noexcept
    : PullReply() {
    *this = ::std::move(from);
  }

  inline PullReply& operator=(PullReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PullReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PullReply* internal_default_instance() {
    return reinterpret_cast<const PullReply*>(
               &_PullReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PullReply* other);
  friend void swap(PullReply& a, PullReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PullReply* New() const PROTOBUF_FINAL { return New(NULL); }

  PullReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PullReply& from);
  void MergeFrom(const PullReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PullReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data(int index) const;
  ::std::string* mutable_data(int index);
  void set_data(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_data(int index, ::std::string&& value);
  #endif
  void set_data(int index, const char* value);
  void set_data(int index, const void* value, size_t size);
  ::std::string* add_data();
  void add_data(const ::std::string& value);
  #if LANG_CXX11
  void add_data(::std::string&& value);
  #endif
  void add_data(const char* value);
  void add_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_data();

  // uint64 chuncks_num = 2;
  void clear_chuncks_num();
  static const int kChuncksNumFieldNumber = 2;
  ::google::protobuf::uint64 chuncks_num() const;
  void set_chuncks_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:edgefs.PullReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> data_;
  ::google::protobuf::uint64 chuncks_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_center_5fservice_2eproto::TableStruct;
  friend void ::protobuf_center_5fservice_2eproto::InitDefaultsPullReplyImpl();
};
// ===================================================================

class CenterService_Stub;

class CenterService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline CenterService() {};
 public:
  virtual ~CenterService();

  typedef CenterService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Read(::google::protobuf::RpcController* controller,
                       const ::edgefs::PullRequest* request,
                       ::edgefs::PullReply* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(CenterService);
};

class CenterService_Stub : public CenterService {
 public:
  CenterService_Stub(::google::protobuf::RpcChannel* channel);
  CenterService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~CenterService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements CenterService ------------------------------------------

  void Read(::google::protobuf::RpcController* controller,
                       const ::edgefs::PullRequest* request,
                       ::edgefs::PullReply* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(CenterService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PullRequest

// string path = 1;
inline void PullRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PullRequest::path() const {
  // @@protoc_insertion_point(field_get:edgefs.PullRequest.path)
  return path_.GetNoArena();
}
inline void PullRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edgefs.PullRequest.path)
}
#if LANG_CXX11
inline void PullRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edgefs.PullRequest.path)
}
#endif
inline void PullRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edgefs.PullRequest.path)
}
inline void PullRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edgefs.PullRequest.path)
}
inline ::std::string* PullRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:edgefs.PullRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PullRequest::release_path() {
  // @@protoc_insertion_point(field_release:edgefs.PullRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PullRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:edgefs.PullRequest.path)
}

// uint64 chunck_size = 2;
inline void PullRequest::clear_chunck_size() {
  chunck_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PullRequest::chunck_size() const {
  // @@protoc_insertion_point(field_get:edgefs.PullRequest.chunck_size)
  return chunck_size_;
}
inline void PullRequest::set_chunck_size(::google::protobuf::uint64 value) {
  
  chunck_size_ = value;
  // @@protoc_insertion_point(field_set:edgefs.PullRequest.chunck_size)
}

// uint64 start_chunck_no = 3;
inline void PullRequest::clear_start_chunck_no() {
  start_chunck_no_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PullRequest::start_chunck_no() const {
  // @@protoc_insertion_point(field_get:edgefs.PullRequest.start_chunck_no)
  return start_chunck_no_;
}
inline void PullRequest::set_start_chunck_no(::google::protobuf::uint64 value) {
  
  start_chunck_no_ = value;
  // @@protoc_insertion_point(field_set:edgefs.PullRequest.start_chunck_no)
}

// uint64 chuncks_num = 4;
inline void PullRequest::clear_chuncks_num() {
  chuncks_num_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PullRequest::chuncks_num() const {
  // @@protoc_insertion_point(field_get:edgefs.PullRequest.chuncks_num)
  return chuncks_num_;
}
inline void PullRequest::set_chuncks_num(::google::protobuf::uint64 value) {
  
  chuncks_num_ = value;
  // @@protoc_insertion_point(field_set:edgefs.PullRequest.chuncks_num)
}

// -------------------------------------------------------------------

// PullReply

// repeated bytes data = 1;
inline int PullReply::data_size() const {
  return data_.size();
}
inline void PullReply::clear_data() {
  data_.Clear();
}
inline const ::std::string& PullReply::data(int index) const {
  // @@protoc_insertion_point(field_get:edgefs.PullReply.data)
  return data_.Get(index);
}
inline ::std::string* PullReply::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:edgefs.PullReply.data)
  return data_.Mutable(index);
}
inline void PullReply::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:edgefs.PullReply.data)
  data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PullReply::set_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:edgefs.PullReply.data)
  data_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PullReply::set_data(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:edgefs.PullReply.data)
}
inline void PullReply::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:edgefs.PullReply.data)
}
inline ::std::string* PullReply::add_data() {
  // @@protoc_insertion_point(field_add_mutable:edgefs.PullReply.data)
  return data_.Add();
}
inline void PullReply::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:edgefs.PullReply.data)
}
#if LANG_CXX11
inline void PullReply::add_data(::std::string&& value) {
  data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:edgefs.PullReply.data)
}
#endif
inline void PullReply::add_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:edgefs.PullReply.data)
}
inline void PullReply::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:edgefs.PullReply.data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PullReply::data() const {
  // @@protoc_insertion_point(field_list:edgefs.PullReply.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PullReply::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:edgefs.PullReply.data)
  return &data_;
}

// uint64 chuncks_num = 2;
inline void PullReply::clear_chuncks_num() {
  chuncks_num_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PullReply::chuncks_num() const {
  // @@protoc_insertion_point(field_get:edgefs.PullReply.chuncks_num)
  return chuncks_num_;
}
inline void PullReply::set_chuncks_num(::google::protobuf::uint64 value) {
  
  chuncks_num_ = value;
  // @@protoc_insertion_point(field_set:edgefs.PullReply.chuncks_num)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace edgefs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_center_5fservice_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edge_service.proto

#include "edge_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace edgefs {
class InvalidFileRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InvalidFileRequest>
      _instance;
} _InvalidFileRequest_default_instance_;
}  // namespace edgefs
namespace protobuf_edge_5fservice_2eproto {
void InitDefaultsInvalidFileRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_InvalidFileRequest_default_instance_;
    new (ptr) ::edgefs::InvalidFileRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::InvalidFileRequest::InitAsDefaultInstance();
}

void InitDefaultsInvalidFileRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInvalidFileRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::InvalidFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::InvalidFileRequest, path_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::edgefs::InvalidFileRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_InvalidFileRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "edge_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022edge_service.proto\022\006edgefs\032\033google/pro"
      "tobuf/empty.proto\"\"\n\022InvalidFileRequest\022"
      "\014\n\004path\030\001 \001(\t2L\n\013EdgeService\022=\n\007Invalid\022"
      "\032.edgefs.InvalidFileRequest\032\026.google.pro"
      "tobuf.EmptyB\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 184);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "edge_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_edge_5fservice_2eproto
namespace edgefs {

// ===================================================================

void InvalidFileRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InvalidFileRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InvalidFileRequest::InvalidFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_edge_5fservice_2eproto::InitDefaultsInvalidFileRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.InvalidFileRequest)
}
InvalidFileRequest::InvalidFileRequest(const InvalidFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:edgefs.InvalidFileRequest)
}

void InvalidFileRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InvalidFileRequest::~InvalidFileRequest() {
  // @@protoc_insertion_point(destructor:edgefs.InvalidFileRequest)
  SharedDtor();
}

void InvalidFileRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InvalidFileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvalidFileRequest::descriptor() {
  ::protobuf_edge_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InvalidFileRequest& InvalidFileRequest::default_instance() {
  ::protobuf_edge_5fservice_2eproto::InitDefaultsInvalidFileRequest();
  return *internal_default_instance();
}

InvalidFileRequest* InvalidFileRequest::New(::google::protobuf::Arena* arena) const {
  InvalidFileRequest* n = new InvalidFileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InvalidFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.InvalidFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InvalidFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.InvalidFileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgefs.InvalidFileRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.InvalidFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.InvalidFileRequest)
  return false;
#undef DO_
}

void InvalidFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.InvalidFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.InvalidFileRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.InvalidFileRequest)
}

::google::protobuf::uint8* InvalidFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.InvalidFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.InvalidFileRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.InvalidFileRequest)
  return target;
}

size_t InvalidFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.InvalidFileRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvalidFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.InvalidFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InvalidFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InvalidFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.InvalidFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.InvalidFileRequest)
    MergeFrom(*source);
  }
}

void InvalidFileRequest::MergeFrom(const InvalidFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.InvalidFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void InvalidFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.InvalidFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvalidFileRequest::CopyFrom(const InvalidFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.InvalidFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvalidFileRequest::IsInitialized() const {
  return true;
}

void InvalidFileRequest::Swap(InvalidFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InvalidFileRequest::InternalSwap(InvalidFileRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InvalidFileRequest::GetMetadata() const {
  protobuf_edge_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_edge_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

EdgeService::~EdgeService() {}

const ::google::protobuf::ServiceDescriptor* EdgeService::descriptor() {
  protobuf_edge_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_edge_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* EdgeService::GetDescriptor() {
  return descriptor();
}

void EdgeService::Invalid(::google::protobuf::RpcController* controller,
                         const ::edgefs::InvalidFileRequest*,
                         ::google::protobuf::Empty*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Invalid() not implemented.");
  done->Run();
}

void EdgeService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_edge_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Invalid(controller,
             ::google::protobuf::down_cast<const ::edgefs::InvalidFileRequest*>(request),
             ::google::protobuf::down_cast< ::google::protobuf::Empty*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& EdgeService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::edgefs::InvalidFileRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& EdgeService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::google::protobuf::Empty::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

EdgeService_Stub::EdgeService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
EdgeService_Stub::EdgeService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
EdgeService_Stub::~EdgeService_Stub() {
  if (owns_channel_) delete channel_;
}

void EdgeService_Stub::Invalid(::google::protobuf::RpcController* controller,
                              const ::edgefs::InvalidFileRequest* request,
                              ::google::protobuf::Empty* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace edgefs

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edge_service.proto

#ifndef PROTOBUF_edge_5fservice_2eproto__INCLUDED
#define PROTOBUF_edge_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_edge_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsInvalidFileRequestImpl();
void InitDefaultsInvalidFileRequest();
inline void InitDefaults() {
  InitDefaultsInvalidFileRequest();
}
}  // namespace protobuf_edge_5fservice_2eproto
namespace edgefs {
class InvalidFileRequest;
class InvalidFileRequestDefaultTypeInternal;
extern InvalidFileRequestDefaultTypeInternal _InvalidFileRequest_default_instance_;
}  // namespace edgefs
namespace edgefs {

// ===================================================================

class InvalidFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:edgefs.InvalidFileRequest) */ {
 public:
  InvalidFileRequest();
  virtual ~InvalidFileRequest();

  InvalidFileRequest(const InvalidFileRequest& from);

  inline InvalidFileRequest& operator=(const InvalidFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InvalidFileRequest(InvalidFileRequest&& from) noexcept
    : InvalidFileRequest() {
    *this = ::std::move(from);
  }

  inline InvalidFileRequest& operator=(InvalidFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InvalidFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InvalidFileRequest* internal_default_instance() {
    return reinterpret_cast<const InvalidFileRequest*>(
               &_InvalidFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InvalidFileRequest* other);
  friend void swap(InvalidFileRequest& a, InvalidFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InvalidFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InvalidFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvalidFileRequest& from);
  void MergeFrom(const InvalidFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvalidFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:edgefs.InvalidFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct ::protobuf_edge_5fservice_2eproto::TableStruct;
  friend void ::protobuf_edge_5fservice_2eproto::InitDefaultsInvalidFileRequestImpl();
};
// ===================================================================

class EdgeService_Stub;

class EdgeService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline EdgeService() {};
 public:
  virtual ~EdgeService();

  typedef EdgeService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Invalid(::google::protobuf::RpcController* controller,
                       const ::edgefs::InvalidFileRequest* request,
                       ::google::protobuf::Empty* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(EdgeService);
};

class EdgeService_Stub : public EdgeService {
 public:
  EdgeService_Stub(::google::protobuf::RpcChannel* channel);
  EdgeService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~EdgeService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements EdgeService ------------------------------------------

  void Invalid(::google::protobuf::RpcController* controller,
                       const ::edgefs::InvalidFileRequest* request,
                       ::google::protobuf::Empty* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(EdgeService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InvalidFileRequest

// string path = 1;
inline void InvalidFileRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InvalidFileRequest::path() const {
  // @@protoc_insertion_point(field_get:edgefs.InvalidFileRequest.path)
  return path_.GetNoArena();
}
inline void InvalidFileRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:edgefs.InvalidFileRequest.path)
}
#if LANG_CXX11
inline void InvalidFileRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:edgefs.InvalidFileRequest.path)
}
#endif
inline void InvalidFileRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:edgefs.InvalidFileRequest.path)
}
inline void InvalidFileRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:edgefs.InvalidFileRequest.path)
}
inline ::std::string* InvalidFileRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:edgefs.InvalidFileRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InvalidFileRequest::release_path() {
  // @@protoc_insertion_point(field_release:edgefs.InvalidFileRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InvalidFileRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:edgefs.InvalidFileRequest.path)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace edgefs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_edge_5fservice_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_service.proto

#include "center_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace edgefs {
class PullRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullRequest>
      _instance;
} _PullRequest_default_instance_;
class PullReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullReply>
      _instance;
} _PullReply_default_instance_;
}  // namespace edgefs
namespace protobuf_center_5fservice_2eproto {
void InitDefaultsPullRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_PullRequest_default_instance_;
    new (ptr) ::edgefs::PullRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::PullRequest::InitAsDefaultInstance();
}

void InitDefaultsPullRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPullRequestImpl);
}

void InitDefaultsPullReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_PullReply_default_instance_;
    new (ptr) ::edgefs::PullReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::PullReply::InitAsDefaultInstance();
}

void InitDefaultsPullReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPullReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullRequest, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullRequest, chunck_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullRequest, start_chunck_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullRequest, chuncks_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullReply, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::PullReply, chuncks_num_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::edgefs::PullRequest)},
  { 9, -1, sizeof(::edgefs::PullReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_PullRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_PullReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "center_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024center_service.proto\022\006edgefs\"^\n\013PullRe"
      "quest\022\014\n\004path\030\001 \001(\t\022\023\n\013chunck_size\030\002 \001(\004"
      "\022\027\n\017start_chunck_no\030\003 \001(\004\022\023\n\013chuncks_num"
      "\030\004 \001(\004\".\n\tPullReply\022\014\n\004data\030\001 \003(\014\022\023\n\013chu"
      "ncks_num\030\002 \001(\0042\?\n\rCenterService\022.\n\004Read\022"
      "\023.edgefs.PullRequest\032\021.edgefs.PullReplyB"
      "\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 252);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_center_5fservice_2eproto
namespace edgefs {

// ===================================================================

void PullRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullRequest::kPathFieldNumber;
const int PullRequest::kChunckSizeFieldNumber;
const int PullRequest::kStartChunckNoFieldNumber;
const int PullRequest::kChuncksNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullRequest::PullRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsPullRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.PullRequest)
}
PullRequest::PullRequest(const PullRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&chunck_size_, &from.chunck_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&chuncks_num_) -
    reinterpret_cast<char*>(&chunck_size_)) + sizeof(chuncks_num_));
  // @@protoc_insertion_point(copy_constructor:edgefs.PullRequest)
}

void PullRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chunck_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chuncks_num_) -
      reinterpret_cast<char*>(&chunck_size_)) + sizeof(chuncks_num_));
  _cached_size_ = 0;
}

PullRequest::~PullRequest() {
  // @@protoc_insertion_point(destructor:edgefs.PullRequest)
  SharedDtor();
}

void PullRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PullRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullRequest::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullRequest& PullRequest::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsPullRequest();
  return *internal_default_instance();
}

PullRequest* PullRequest::New(::google::protobuf::Arena* arena) const {
  PullRequest* n = new PullRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.PullRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&chunck_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chuncks_num_) -
      reinterpret_cast<char*>(&chunck_size_)) + sizeof(chuncks_num_));
  _internal_metadata_.Clear();
}

bool PullRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.PullRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgefs.PullRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 chunck_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &chunck_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_chunck_no = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_chunck_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 chuncks_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &chuncks_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.PullRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.PullRequest)
  return false;
#undef DO_
}

void PullRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.PullRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.PullRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // uint64 chunck_size = 2;
  if (this->chunck_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->chunck_size(), output);
  }

  // uint64 start_chunck_no = 3;
  if (this->start_chunck_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->start_chunck_no(), output);
  }

  // uint64 chuncks_num = 4;
  if (this->chuncks_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->chuncks_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.PullRequest)
}

::google::protobuf::uint8* PullRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.PullRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.PullRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // uint64 chunck_size = 2;
  if (this->chunck_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->chunck_size(), target);
  }

  // uint64 start_chunck_no = 3;
  if (this->start_chunck_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->start_chunck_no(), target);
  }

  // uint64 chuncks_num = 4;
  if (this->chuncks_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->chuncks_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.PullRequest)
  return target;
}

size_t PullRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.PullRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // uint64 chunck_size = 2;
  if (this->chunck_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->chunck_size());
  }

  // uint64 start_chunck_no = 3;
  if (this->start_chunck_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_chunck_no());
  }

  // uint64 chuncks_num = 4;
  if (this->chuncks_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->chuncks_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.PullRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PullRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.PullRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.PullRequest)
    MergeFrom(*source);
  }
}

void PullRequest::MergeFrom(const PullRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.PullRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.chunck_size() != 0) {
    set_chunck_size(from.chunck_size());
  }
  if (from.start_chunck_no() != 0) {
    set_start_chunck_no(from.start_chunck_no());
  }
  if (from.chuncks_num() != 0) {
    set_chuncks_num(from.chuncks_num());
  }
}

void PullRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.PullRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullRequest::CopyFrom(const PullRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.PullRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullRequest::IsInitialized() const {
  return true;
}

void PullRequest::Swap(PullRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullRequest::InternalSwap(PullRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  swap(chunck_size_, other->chunck_size_);
  swap(start_chunck_no_, other->start_chunck_no_);
  swap(chuncks_num_, other->chuncks_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullRequest::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullReply::kDataFieldNumber;
const int PullReply::kChuncksNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullReply::PullReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsPullReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.PullReply)
}
PullReply::PullReply(const PullReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chuncks_num_ = from.chuncks_num_;
  // @@protoc_insertion_point(copy_constructor:edgefs.PullReply)
}

void PullReply::SharedCtor() {
  chuncks_num_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

PullReply::~PullReply() {
  // @@protoc_insertion_point(destructor:edgefs.PullReply)
  SharedDtor();
}

void PullReply::SharedDtor() {
}

void PullReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullReply::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullReply& PullReply::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsPullReply();
  return *internal_default_instance();
}

PullReply* PullReply::New(::google::protobuf::Arena* arena) const {
  PullReply* n = new PullReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullReply::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.PullReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  chuncks_num_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PullReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.PullReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 chuncks_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &chuncks_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.PullReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.PullReply)
  return false;
#undef DO_
}

void PullReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.PullReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(i), output);
  }

  // uint64 chuncks_num = 2;
  if (this->chuncks_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->chuncks_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.PullReply)
}

::google::protobuf::uint8* PullReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.PullReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->data(i), target);
  }

  // uint64 chuncks_num = 2;
  if (this->chuncks_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->chuncks_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.PullReply)
  return target;
}

size_t PullReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.PullReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0, n = this->data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  // uint64 chuncks_num = 2;
  if (this->chuncks_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->chuncks_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.PullReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PullReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.PullReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.PullReply)
    MergeFrom(*source);
  }
}

void PullReply::MergeFrom(const PullReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.PullReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.chuncks_num() != 0) {
    set_chuncks_num(from.chuncks_num());
  }
}

void PullReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.PullReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullReply::CopyFrom(const PullReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.PullReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullReply::IsInitialized() const {
  return true;
}

void PullReply::Swap(PullReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullReply::InternalSwap(PullReply* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(chuncks_num_, other->chuncks_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullReply::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CenterService::~CenterService() {}

const ::google::protobuf::ServiceDescriptor* CenterService::descriptor() {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* CenterService::GetDescriptor() {
  return descriptor();
}

void CenterService::Read(::google::protobuf::RpcController* controller,
                         const ::edgefs::PullRequest*,
                         ::edgefs::PullReply*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Read() not implemented.");
  done->Run();
}

void CenterService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_center_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Read(controller,
             ::google::protobuf::down_cast<const ::edgefs::PullRequest*>(request),
             ::google::protobuf::down_cast< ::edgefs::PullReply*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CenterService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::edgefs::PullRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& CenterService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::edgefs::PullReply::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

CenterService_Stub::CenterService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
CenterService_Stub::CenterService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
CenterService_Stub::~CenterService_Stub() {
  if (owns_channel_) delete channel_;
}

void CenterService_Stub::Read(::google::protobuf::RpcController* controller,
                              const ::edgefs::PullRequest* request,
                              ::edgefs::PullReply* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace edgefs

// @@protoc_insertion_point(global_scope)

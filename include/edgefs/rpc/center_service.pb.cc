// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_service.proto

#include "center_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace edgefs {
class MetadatesReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetadatesReply>
      _instance;
} _MetadatesReply_default_instance_;
class FileReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileReadRequest>
      _instance;
} _FileReadRequest_default_instance_;
class FileReadReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileReadReply>
      _instance;
} _FileReadReply_default_instance_;
class WholeFileReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WholeFileReadRequest>
      _instance;
} _WholeFileReadRequest_default_instance_;
class WholeFileReadReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WholeFileReadReply>
      _instance;
} _WholeFileReadReply_default_instance_;
}  // namespace edgefs
namespace protobuf_center_5fservice_2eproto {
void InitDefaultsMetadatesReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_MetadatesReply_default_instance_;
    new (ptr) ::edgefs::MetadatesReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::MetadatesReply::InitAsDefaultInstance();
}

void InitDefaultsMetadatesReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMetadatesReplyImpl);
}

void InitDefaultsFileReadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_FileReadRequest_default_instance_;
    new (ptr) ::edgefs::FileReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::FileReadRequest::InitAsDefaultInstance();
}

void InitDefaultsFileReadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileReadRequestImpl);
}

void InitDefaultsFileReadReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_FileReadReply_default_instance_;
    new (ptr) ::edgefs::FileReadReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::FileReadReply::InitAsDefaultInstance();
}

void InitDefaultsFileReadReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileReadReplyImpl);
}

void InitDefaultsWholeFileReadRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_WholeFileReadRequest_default_instance_;
    new (ptr) ::edgefs::WholeFileReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::WholeFileReadRequest::InitAsDefaultInstance();
}

void InitDefaultsWholeFileReadRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWholeFileReadRequestImpl);
}

void InitDefaultsWholeFileReadReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::edgefs::_WholeFileReadReply_default_instance_;
    new (ptr) ::edgefs::WholeFileReadReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::edgefs::WholeFileReadReply::InitAsDefaultInstance();
}

void InitDefaultsWholeFileReadReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWholeFileReadReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::MetadatesReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadRequest, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadRequest, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadReply, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::FileReadReply, len_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::WholeFileReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::WholeFileReadRequest, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::WholeFileReadReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::WholeFileReadReply, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::edgefs::WholeFileReadReply, len_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::edgefs::MetadatesReply)},
  { 5, -1, sizeof(::edgefs::FileReadRequest)},
  { 13, -1, sizeof(::edgefs::FileReadReply)},
  { 20, -1, sizeof(::edgefs::WholeFileReadRequest)},
  { 26, -1, sizeof(::edgefs::WholeFileReadReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_MetadatesReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_FileReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_FileReadReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_WholeFileReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::edgefs::_WholeFileReadReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "center_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024center_service.proto\022\006edgefs\032\033google/p"
      "rotobuf/empty.proto\"\020\n\016MetadatesReply\"<\n"
      "\017FileReadRequest\022\014\n\004path\030\001 \001(\t\022\016\n\006offset"
      "\030\002 \001(\004\022\013\n\003len\030\003 \001(\004\"*\n\rFileReadReply\022\014\n\004"
      "data\030\001 \001(\t\022\013\n\003len\030\002 \001(\004\"$\n\024WholeFileRead"
      "Request\022\014\n\004path\030\001 \001(\t\"/\n\022WholeFileReadRe"
      "ply\022\014\n\004data\030\001 \001(\t\022\013\n\003len\030\002 \001(\0042\017\n\rWorker"
      "ServiceB\003\200\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 300);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_center_5fservice_2eproto
namespace edgefs {

// ===================================================================

void MetadatesReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetadatesReply::MetadatesReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsMetadatesReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.MetadatesReply)
}
MetadatesReply::MetadatesReply(const MetadatesReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:edgefs.MetadatesReply)
}

void MetadatesReply::SharedCtor() {
  _cached_size_ = 0;
}

MetadatesReply::~MetadatesReply() {
  // @@protoc_insertion_point(destructor:edgefs.MetadatesReply)
  SharedDtor();
}

void MetadatesReply::SharedDtor() {
}

void MetadatesReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MetadatesReply::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetadatesReply& MetadatesReply::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsMetadatesReply();
  return *internal_default_instance();
}

MetadatesReply* MetadatesReply::New(::google::protobuf::Arena* arena) const {
  MetadatesReply* n = new MetadatesReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MetadatesReply::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.MetadatesReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MetadatesReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.MetadatesReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.MetadatesReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.MetadatesReply)
  return false;
#undef DO_
}

void MetadatesReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.MetadatesReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.MetadatesReply)
}

::google::protobuf::uint8* MetadatesReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.MetadatesReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.MetadatesReply)
  return target;
}

size_t MetadatesReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.MetadatesReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MetadatesReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.MetadatesReply)
  GOOGLE_DCHECK_NE(&from, this);
  const MetadatesReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetadatesReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.MetadatesReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.MetadatesReply)
    MergeFrom(*source);
  }
}

void MetadatesReply::MergeFrom(const MetadatesReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.MetadatesReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MetadatesReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.MetadatesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetadatesReply::CopyFrom(const MetadatesReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.MetadatesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetadatesReply::IsInitialized() const {
  return true;
}

void MetadatesReply::Swap(MetadatesReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetadatesReply::InternalSwap(MetadatesReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MetadatesReply::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileReadRequest::kPathFieldNumber;
const int FileReadRequest::kOffsetFieldNumber;
const int FileReadRequest::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileReadRequest::FileReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsFileReadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.FileReadRequest)
}
FileReadRequest::FileReadRequest(const FileReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:edgefs.FileReadRequest)
}

void FileReadRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _cached_size_ = 0;
}

FileReadRequest::~FileReadRequest() {
  // @@protoc_insertion_point(destructor:edgefs.FileReadRequest)
  SharedDtor();
}

void FileReadRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileReadRequest::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileReadRequest& FileReadRequest::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsFileReadRequest();
  return *internal_default_instance();
}

FileReadRequest* FileReadRequest::New(::google::protobuf::Arena* arena) const {
  FileReadRequest* n = new FileReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.FileReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

bool FileReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.FileReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgefs.FileReadRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.FileReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.FileReadRequest)
  return false;
#undef DO_
}

void FileReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.FileReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.FileReadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offset(), output);
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.FileReadRequest)
}

::google::protobuf::uint8* FileReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.FileReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.FileReadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offset(), target);
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.FileReadRequest)
  return target;
}

size_t FileReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.FileReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // uint64 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 len = 3;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.FileReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FileReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.FileReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.FileReadRequest)
    MergeFrom(*source);
  }
}

void FileReadRequest::MergeFrom(const FileReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.FileReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void FileReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.FileReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileReadRequest::CopyFrom(const FileReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.FileReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileReadRequest::IsInitialized() const {
  return true;
}

void FileReadRequest::Swap(FileReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileReadRequest::InternalSwap(FileReadRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  swap(offset_, other->offset_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileReadRequest::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileReadReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileReadReply::kDataFieldNumber;
const int FileReadReply::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileReadReply::FileReadReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsFileReadReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.FileReadReply)
}
FileReadReply::FileReadReply(const FileReadReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:edgefs.FileReadReply)
}

void FileReadReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

FileReadReply::~FileReadReply() {
  // @@protoc_insertion_point(destructor:edgefs.FileReadReply)
  SharedDtor();
}

void FileReadReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileReadReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileReadReply::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileReadReply& FileReadReply::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsFileReadReply();
  return *internal_default_instance();
}

FileReadReply* FileReadReply::New(::google::protobuf::Arena* arena) const {
  FileReadReply* n = new FileReadReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileReadReply::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.FileReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FileReadReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.FileReadReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgefs.FileReadReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.FileReadReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.FileReadReply)
  return false;
#undef DO_
}

void FileReadReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.FileReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.FileReadReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.FileReadReply)
}

::google::protobuf::uint8* FileReadReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.FileReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.FileReadReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.FileReadReply)
  return target;
}

size_t FileReadReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.FileReadReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileReadReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.FileReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FileReadReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileReadReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.FileReadReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.FileReadReply)
    MergeFrom(*source);
  }
}

void FileReadReply::MergeFrom(const FileReadReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.FileReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void FileReadReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.FileReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileReadReply::CopyFrom(const FileReadReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.FileReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileReadReply::IsInitialized() const {
  return true;
}

void FileReadReply::Swap(FileReadReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileReadReply::InternalSwap(FileReadReply* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileReadReply::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WholeFileReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WholeFileReadRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WholeFileReadRequest::WholeFileReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsWholeFileReadRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.WholeFileReadRequest)
}
WholeFileReadRequest::WholeFileReadRequest(const WholeFileReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:edgefs.WholeFileReadRequest)
}

void WholeFileReadRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WholeFileReadRequest::~WholeFileReadRequest() {
  // @@protoc_insertion_point(destructor:edgefs.WholeFileReadRequest)
  SharedDtor();
}

void WholeFileReadRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WholeFileReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WholeFileReadRequest::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WholeFileReadRequest& WholeFileReadRequest::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsWholeFileReadRequest();
  return *internal_default_instance();
}

WholeFileReadRequest* WholeFileReadRequest::New(::google::protobuf::Arena* arena) const {
  WholeFileReadRequest* n = new WholeFileReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WholeFileReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.WholeFileReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WholeFileReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.WholeFileReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgefs.WholeFileReadRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.WholeFileReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.WholeFileReadRequest)
  return false;
#undef DO_
}

void WholeFileReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.WholeFileReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.WholeFileReadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.WholeFileReadRequest)
}

::google::protobuf::uint8* WholeFileReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.WholeFileReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.WholeFileReadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.WholeFileReadRequest)
  return target;
}

size_t WholeFileReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.WholeFileReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WholeFileReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.WholeFileReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WholeFileReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WholeFileReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.WholeFileReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.WholeFileReadRequest)
    MergeFrom(*source);
  }
}

void WholeFileReadRequest::MergeFrom(const WholeFileReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.WholeFileReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void WholeFileReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.WholeFileReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WholeFileReadRequest::CopyFrom(const WholeFileReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.WholeFileReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WholeFileReadRequest::IsInitialized() const {
  return true;
}

void WholeFileReadRequest::Swap(WholeFileReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WholeFileReadRequest::InternalSwap(WholeFileReadRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WholeFileReadRequest::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WholeFileReadReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WholeFileReadReply::kDataFieldNumber;
const int WholeFileReadReply::kLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WholeFileReadReply::WholeFileReadReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_center_5fservice_2eproto::InitDefaultsWholeFileReadReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:edgefs.WholeFileReadReply)
}
WholeFileReadReply::WholeFileReadReply(const WholeFileReadReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:edgefs.WholeFileReadReply)
}

void WholeFileReadReply::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

WholeFileReadReply::~WholeFileReadReply() {
  // @@protoc_insertion_point(destructor:edgefs.WholeFileReadReply)
  SharedDtor();
}

void WholeFileReadReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WholeFileReadReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WholeFileReadReply::descriptor() {
  ::protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WholeFileReadReply& WholeFileReadReply::default_instance() {
  ::protobuf_center_5fservice_2eproto::InitDefaultsWholeFileReadReply();
  return *internal_default_instance();
}

WholeFileReadReply* WholeFileReadReply::New(::google::protobuf::Arena* arena) const {
  WholeFileReadReply* n = new WholeFileReadReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WholeFileReadReply::Clear() {
// @@protoc_insertion_point(message_clear_start:edgefs.WholeFileReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WholeFileReadReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:edgefs.WholeFileReadReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "edgefs.WholeFileReadReply.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 len = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:edgefs.WholeFileReadReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:edgefs.WholeFileReadReply)
  return false;
#undef DO_
}

void WholeFileReadReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:edgefs.WholeFileReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.WholeFileReadReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:edgefs.WholeFileReadReply)
}

::google::protobuf::uint8* WholeFileReadReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:edgefs.WholeFileReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "edgefs.WholeFileReadReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:edgefs.WholeFileReadReply)
  return target;
}

size_t WholeFileReadReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:edgefs.WholeFileReadReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // uint64 len = 2;
  if (this->len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WholeFileReadReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:edgefs.WholeFileReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  const WholeFileReadReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WholeFileReadReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:edgefs.WholeFileReadReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:edgefs.WholeFileReadReply)
    MergeFrom(*source);
  }
}

void WholeFileReadReply::MergeFrom(const WholeFileReadReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:edgefs.WholeFileReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void WholeFileReadReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:edgefs.WholeFileReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WholeFileReadReply::CopyFrom(const WholeFileReadReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:edgefs.WholeFileReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WholeFileReadReply::IsInitialized() const {
  return true;
}

void WholeFileReadReply::Swap(WholeFileReadReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WholeFileReadReply::InternalSwap(WholeFileReadReply* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(len_, other->len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WholeFileReadReply::GetMetadata() const {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_center_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

WorkerService::~WorkerService() {}

const ::google::protobuf::ServiceDescriptor* WorkerService::descriptor() {
  protobuf_center_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_center_5fservice_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* WorkerService::GetDescriptor() {
  return descriptor();
}

void WorkerService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_center_5fservice_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& WorkerService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& WorkerService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

WorkerService_Stub::WorkerService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
WorkerService_Stub::WorkerService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
WorkerService_Stub::~WorkerService_Stub() {
  if (owns_channel_) delete channel_;
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace edgefs

// @@protoc_insertion_point(global_scope)
